{"ast":null,"code":"var _jsxFileName = \"/Users/deemck/Documents/leovegas/leovegas-coding-assignment/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport Movies from '../components/Movies';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SEARCH_ENDPOINT, DISCOVER_ENDPOINT } from '../constants';\nimport { fetchMovies } from '../data/moviesSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useViewTrailer from '../hooks/useViewTrailer';\nimport YouTubePlayer from '../components/YouTubePlayer';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  var _movies$results;\n  const state = useSelector(state => state);\n  const [videoKey, viewTrailer] = useViewTrailer();\n  const [pageNumber, setPageNumber] = useState(1);\n  // const [isFetching, setIsFetching] = useInfiniteScroll()\n  const {\n    movies\n  } = state === null || state === void 0 ? void 0 : state.movies;\n  const dispatch = useDispatch();\n  const [searchParams] = useSearchParams();\n  const searchQuery = searchParams.get('search');\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n        dispatch(fetchMovies(`${DISCOVER_ENDPOINT}&page=${pageNumber}`));\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n\n    // cleanup the event listener\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  const getMovies = () => {\n    if (searchQuery) {\n      dispatch(fetchMovies(`${SEARCH_ENDPOINT}&query=${searchQuery}&page=${pageNumber}`));\n    } else {\n      dispatch(fetchMovies(`${DISCOVER_ENDPOINT}&page=${pageNumber}`));\n    }\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [videoKey && /*#__PURE__*/_jsxDEV(YouTubePlayer, {\n      videoKey: videoKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 26\n    }, this), (movies === null || movies === void 0 ? void 0 : (_movies$results = movies.results) === null || _movies$results === void 0 ? void 0 : _movies$results.length) === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"30px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Sorry, there are no movies available at the moment. Try another movie.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Movies, {\n      movies: movies,\n      viewTrailer: viewTrailer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"P1ZWYXt1Wsa3fUr074PFyyIIBRU=\", false, function () {\n  return [useSelector, useViewTrailer, useDispatch, useSearchParams];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Movies","useEffect","useState","useSearchParams","SEARCH_ENDPOINT","DISCOVER_ENDPOINT","fetchMovies","useDispatch","useSelector","useViewTrailer","YouTubePlayer","useInfiniteScroll","Home","state","videoKey","viewTrailer","pageNumber","setPageNumber","movies","dispatch","searchParams","searchQuery","get","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","getMovies","results","length","padding"],"sources":["/Users/deemck/Documents/leovegas/leovegas-coding-assignment/src/pages/Home.jsx"],"sourcesContent":["import Movies from '../components/Movies'\nimport { useEffect, useState } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nimport { SEARCH_ENDPOINT, DISCOVER_ENDPOINT } from '../constants'\nimport { fetchMovies } from '../data/moviesSlice'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useViewTrailer from '../hooks/useViewTrailer'\nimport YouTubePlayer from '../components/YouTubePlayer'\nimport useInfiniteScroll from '../hooks/useInfiniteScroll'\n\nconst Home = () => {\n    const state = useSelector((state) => state)\n    const [videoKey, viewTrailer] = useViewTrailer()\n    const [pageNumber, setPageNumber] = useState(1)\n    // const [isFetching, setIsFetching] = useInfiniteScroll()\n    const { movies } = state?.movies\n    const dispatch = useDispatch()\n    const [searchParams] = useSearchParams()\n    const searchQuery = searchParams.get('search')\n\n    useEffect(() => {\n        const handleScroll = () => {\n            if (\n                window.innerHeight + document.documentElement.scrollTop ===\n                document.documentElement.offsetHeight\n            ) {\n                dispatch(fetchMovies(`${DISCOVER_ENDPOINT}&page=${pageNumber}`))\n            }\n        }\n\n        window.addEventListener('scroll', handleScroll)\n\n        // cleanup the event listener\n        return () => window.removeEventListener('scroll', handleScroll)\n    }, [])\n\n    const getMovies = () => {\n        if (searchQuery) {\n            dispatch(fetchMovies(`${SEARCH_ENDPOINT}&query=${searchQuery}&page=${pageNumber}`))\n        } else {\n            dispatch(fetchMovies(`${DISCOVER_ENDPOINT}&page=${pageNumber}`))\n        }\n    }\n\n    useEffect(() => {\n        getMovies()\n    }, [])\n\n    return (\n        <> \n            {videoKey && <YouTubePlayer videoKey={videoKey} />}\n\n            {movies?.results?.length === 0 && (\n                <div style={{padding: \"30px\"}}><h6>Sorry, there are no movies available at the moment. Try another movie.</h6></div>\n            )}\n\n            <Movies movies={movies} viewTrailer={viewTrailer}/>\n        </>\n    )\n}\n\nexport default Home\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,sBAAsB;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,cAAc;AACjE,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,iBAAiB,MAAM,4BAA4B;AAAA;AAAA;AAE1D,MAAMC,IAAI,GAAG,MAAM;EAAA;EAAA;EACf,MAAMC,KAAK,GAAGL,WAAW,CAAEK,KAAK,IAAKA,KAAK,CAAC;EAC3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,cAAc,EAAE;EAChD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC/C;EACA,MAAM;IAAEgB;EAAO,CAAC,GAAGL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,MAAM;EAChC,MAAMC,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAM,CAACa,YAAY,CAAC,GAAGjB,eAAe,EAAE;EACxC,MAAMkB,WAAW,GAAGD,YAAY,CAACE,GAAG,CAAC,QAAQ,CAAC;EAE9CrB,SAAS,CAAC,MAAM;IACZ,MAAMsB,YAAY,GAAG,MAAM;MACvB,IACIC,MAAM,CAACC,WAAW,GAAGC,QAAQ,CAACC,eAAe,CAACC,SAAS,KACvDF,QAAQ,CAACC,eAAe,CAACE,YAAY,EACvC;QACEV,QAAQ,CAACb,WAAW,CAAE,GAAED,iBAAkB,SAAQW,UAAW,EAAC,CAAC,CAAC;MACpE;IACJ,CAAC;IAEDQ,MAAM,CAACM,gBAAgB,CAAC,QAAQ,EAAEP,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAMC,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAER,YAAY,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,SAAS,GAAG,MAAM;IACpB,IAAIX,WAAW,EAAE;MACbF,QAAQ,CAACb,WAAW,CAAE,GAAEF,eAAgB,UAASiB,WAAY,SAAQL,UAAW,EAAC,CAAC,CAAC;IACvF,CAAC,MAAM;MACHG,QAAQ,CAACb,WAAW,CAAE,GAAED,iBAAkB,SAAQW,UAAW,EAAC,CAAC,CAAC;IACpE;EACJ,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZ+B,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,WACKlB,QAAQ,iBAAI,QAAC,aAAa;MAAC,QAAQ,EAAEA;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,EAEjD,CAAAI,MAAM,aAANA,MAAM,0CAANA,MAAM,CAAEe,OAAO,oDAAf,gBAAiBC,MAAM,MAAK,CAAC,iBAC1B;MAAK,KAAK,EAAE;QAACC,OAAO,EAAE;MAAM,CAAE;MAAA,uBAAC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAA+E;MAAA;MAAA;MAAA;IAAA,QACjH,eAED,QAAC,MAAM;MAAC,MAAM,EAAEjB,MAAO;MAAC,WAAW,EAAEH;IAAY;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA,gBACpD;AAEX,CAAC;AAAA,GAjDKH,IAAI;EAAA,QACQJ,WAAW,EACOC,cAAc,EAI7BF,WAAW,EACLJ,eAAe;AAAA;AAAA,KAPpCS,IAAI;AAmDV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}